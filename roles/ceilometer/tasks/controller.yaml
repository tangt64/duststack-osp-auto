- name: install packages
  tags: package
  yum: 
    name: ['openstack-ceilometer-common.noarch', 'openstack-ceilometer-notification', 'openstack-ceilometer-central', 'openstack-ceilometer-alarm', 'python-ceilometerclient']
    state: latest

- name: install configuration
  tags: config
  template: 
    src: "{{ item }}.j2" 
    dest: "/etc/ceilometer/{{ item }}"
  with_items:
    - ceilometer.conf
    - pipeline.yaml

- block:
  - name: database
    tags: dbs
    shell: "mongo --host {{ internal_vip_address|default(groups['controller'][0]) }} --eval \"db = db.getSiblingDB('ceilometer');db.getUser('ceilometer')\""
    register: ulist

  - name: create database
    tags: dbs
    command : "mongo --host {{ internal_vip_address|default(groups['controller'][0]) }} --eval \"db = db.getSiblingDB('ceilometer'); db.createUser({user: 'ceilometer', pwd: '{{ ceilometerdb_password }}', roles: [ 'readWrite', 'dbAdmin' ]})\""
    when:  not ansible_check_mode and ulist.stdout.find("null") >= 0

  - name: list users
    command: "openstack user list"
    register: ulist

  - block:
      - command: "openstack user create --domain default --password {{ ceilometer_password }} ceilometer"
      - command: "openstack role add --project service --user ceilometer admin"
      - command: "openstack service create --name ceilometer --description 'OpenStack Telemetry service' metering"
      - command: "openstack endpoint create --region RegionOne metering {{ item }} http://{{ internal_vip_address|default(groups['controller'][0]) }}:8777"
        with_items:
          - internal
          - public
          - admin
    when: not ansible_check_mode and ulist.stdout.find("ceilometer") < 0
  run_once: true

- name: start services
  tags: service
  systemd: 
    name: "{{ item }}" 
    state: restarted 
    enabled: yes
  when: not ansible_check_mode
  with_items:
    - openstack-ceilometer-notification
    - openstack-ceilometer-central
