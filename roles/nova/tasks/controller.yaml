- name: login to mariadb server
  mysql_user:
    name: root
    password: ajdcjddl
    login_unix_socket: /var/lib/mysql/mysql.sock

- name: install to openstack nova packages
  tags: packages
  dnf:
    name: "{{ item }}"
    state: latest
  loop:
    - openstack-nova-api
    - openstack-nova-conductor
    - openstack-nova-novncproxy
    - openstack-nova-scheduler
    - openstack-nova-migration
    - openstack-nova-spicehtml5proxy
    - openstack-placement-common
    - openstack-placement-api
    - openstack-nova-migration
    - openstack-nova-serialproxy
    - openstack-nova-spicehtml5proxy

- name: update to /etc/httpd/conf.d/placement.conf file
  copy: 
    src: 00-placement-api.conf
    dest: /etc/httpd/conf.d/00-placement-api.conf

- name: restart to httpd service
  systemd:
    name: httpd
    state: restarted

- name: install nova configuration
  tags: config
  template: 
    src: "{{ item }}.j2" 
    dest: /etc/nova/{{ item }}
  loop:
    - nova.conf

- name: install nova configuration
  tags: config
  template: 
    src: "{{ item }}.j2" 
    dest: /etc/placement/{{ item }}
  loop:
    - placement.conf

#- name: install fixed httpd configuration
#  tags: config
#  copy: 
#    src: 00-nova-placement-api.conf 
#    dest: /etc/httpd/conf.d/00-nova-placement-api.conf

#- name: restart httpd
#  systemd: 
#   name: httpd 
#    state: restarted 
#    enabled: yes
#  when: not ansible_check_mode

- name: copy db create template
  template: 
    src: novadb.sql.j2
    dest: /tmp/novadb.sql

- block:
  - name: create databasea for nova
    community.mysql.mysql_db: 
      login_user: root
      login_password: ajdcjddl
      name: nova
      state: import
      target: "{{ item }}"
    loop:
      - /tmp/novadb.sql

  - name: list users
    command: "openstack user list"
    register: ulist

  - block:
      - command: "openstack user create --domain default --password {{ nova_password }} nova"
      - command: "openstack role add --project service --user nova admin"
      - command: "openstack service create --name nova --description 'OpenStack Compute' compute"
      - command: "openstack endpoint create --region RegionOne compute {{ item }} http://{{ internal_vip_address|default(groups['controller'][0]) }}:8774/v2.1"
        with_items:
          - internal
          - public
          - admin
      - command: "{{ item }}"
        with_items:
          - "openstack user create --domain default --password {{ nova_placement_password }} placement"
          - "openstack role add --project service --user placement admin"
      - command: "openstack service create --name placement --description 'Placement API' placement"
      - command: "openstack endpoint create --region RegionOne placement {{ item }} http://{{ internal_vip_address|default(groups['controller'][0]) }}:8778"
        with_items:
          - internal
          - public
          - admin
    when: not ansible_check_mode and ulist.stdout.find("nova") < 0

  - name: run nova db sync
    command: nova-manage {{ item }} 
    become: true
    become_user: nova
    with_items:
      - "api_db sync"
      - "cell_v2 map_cell0"
      - "cell_v2 create_cell --name=cell1 --verbose"
      - "db sync"
    when: not ansible_check_mode
  run_once: true

- name: run nova-placement db sync
  command:  placement-manage db sync
  become: true
  when: not ansible_check_mode
  run_once: true

- name: restart services
  tags: service
  systemd: 
    name: "{{ item }}"
    state: restarted 
    enabled: yes
  when: not ansible_check_mode
  with_items:
    - openstack-nova-api
    - openstack-nova-scheduler
    - openstack-nova-conductor
    - openstack-nova-novncproxy

- name: verify operation
  shell: nova-manage cell_v2 list_cells | grep '^| cell0'
